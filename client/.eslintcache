[{"C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\index.js":"1","C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\components\\App.js":"2","C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\reducers\\index.js":"3","C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\components\\Tickets\\CreateTicket.js":"4","C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\components\\Tickets\\EditTicket.js":"5","C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\components\\Login\\newLogin.js":"6","C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\components\\Tickets\\MyTickets.js":"7","C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\components\\Login\\newRegister.js":"8","C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\components\\Dashboard\\Dashboard.js":"9","C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\components\\Login\\Login.js":"10","C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\components\\ManageProject\\ManageProjects.js":"11","C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\components\\ManageProject\\CreateProject.js":"12","C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\components\\ManageProject\\EditProjects.js":"13","C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\actions\\index.js":"14","C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\components\\Login\\Register.js":"15","C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\components\\Tickets\\Ticket.js":"16","C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\components\\Sidebar\\Sidebar.js":"17","C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\components\\Header\\Header.js":"18","C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\components\\Tickets\\TicketGrid.js":"19","C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\components\\ManageProject\\MyProjects.js":"20","C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\components\\Tickets\\ProjectTickets.js":"21"},{"size":474,"mtime":1639256761210,"results":"22","hashOfConfig":"23"},{"size":2207,"mtime":1639688222499,"results":"24","hashOfConfig":"23"},{"size":1024,"mtime":1639686840259,"results":"25","hashOfConfig":"23"},{"size":7968,"mtime":1639692315976,"results":"26","hashOfConfig":"23"},{"size":7196,"mtime":1639695533910,"results":"27","hashOfConfig":"23"},{"size":7514,"mtime":1639507881663,"results":"28","hashOfConfig":"23"},{"size":6336,"mtime":1639691242962,"results":"29","hashOfConfig":"23"},{"size":4431,"mtime":1639256761195,"results":"30","hashOfConfig":"23"},{"size":4087,"mtime":1639692458077,"results":"31","hashOfConfig":"23"},{"size":3302,"mtime":1639256761191,"results":"32","hashOfConfig":"23"},{"size":3916,"mtime":1639256761198,"results":"33","hashOfConfig":"23"},{"size":7631,"mtime":1639256761196,"results":"34","hashOfConfig":"23"},{"size":8433,"mtime":1639694341669,"results":"35","hashOfConfig":"23"},{"size":520,"mtime":1639686663197,"results":"36","hashOfConfig":"23"},{"size":1672,"mtime":1639256761192,"results":"37","hashOfConfig":"23"},{"size":3443,"mtime":1639696974311,"results":"38","hashOfConfig":"23"},{"size":2400,"mtime":1639256761200,"results":"39","hashOfConfig":"23"},{"size":1396,"mtime":1639691151996,"results":"40","hashOfConfig":"23"},{"size":4603,"mtime":1639691229293,"results":"41","hashOfConfig":"23"},{"size":3360,"mtime":1639688804275,"results":"42","hashOfConfig":"23"},{"size":1816,"mtime":1639690846467,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"13i463r",{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\index.js",[],["90","91"],"C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\components\\App.js",["92"],"C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\reducers\\index.js",[],"C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\components\\Tickets\\CreateTicket.js",[],"C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\components\\Tickets\\EditTicket.js",[],"C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\components\\Login\\newLogin.js",["93","94"],"import { React, useState } from 'react';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { finalLogin } from '../../actions'\r\nimport Register from './Register';\r\nimport axios from 'axios';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright Â© '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        MERN-Bug-Tracker\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  test_account: {\r\n    margin: theme.spacing(1, .2, 0),\r\n    height: '4em',\r\n\r\n  }\r\n}));\r\n\r\nconst NewLogin = () => {\r\n  const classes = useStyles();\r\n\r\n  const [login, setLogin] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const buttonClick = (e, name) => {\r\n      setLogin(name)\r\n      setPassword(\"PassWord1\")\r\n  }\r\n\r\n  const formSubmit = (e) => {\r\n      e.preventDefault();\r\n      axios.post(\"http://localhost:5000/login\", {\r\n          username: login,\r\n          password: password\r\n      }).then(res => {\r\n          if(res.data.message){\r\n              alert('wrong username/password')\r\n          }else{\r\n              dispatch(finalLogin(res.data))\r\n              history.push(\"/dashboard\")\r\n          }\r\n      })              \r\n  }\r\n\r\n  const createAccount = (e) => {\r\n      e.preventDefault()\r\n      history.push('/create-account')\r\n  }\r\n\r\n  const toTestAccount = () => {\r\n      document.querySelector(\".test-login-container\").style.display = \"block\";\r\n      document.querySelector(\".login-form-main\").style.display = \"none\";\r\n  }\r\n\r\n  const toRegularLogin = () => {\r\n      document.querySelector(\".test-login-container\").style.display = \"none\";\r\n      document.querySelector(\".login-form-main\").style.display = \"block\";\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n      <Typography component='h1'>MERN Bug-Tracker</Typography>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <div className=\"test-login-container\">\r\n            <Grid container\r\n            spacing={2}\r\n            justifyContent=\"space-around\"\r\n            alignItems = \"center\"\r\n            >\r\n              <Grid item xs={6}>\r\n                <Button\r\n                  className={classes.test_account}\r\n                  color=\"primary\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  onClick={(e) => buttonClick(e, 'Admin')}\r\n                  >\r\n                    Admin\r\n                  </Button>\r\n              </Grid>\r\n                <Grid item xs={6}>\r\n                  <Button\r\n                  className={classes.test_account}\r\n                  color=\"primary\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  onClick={(e) => buttonClick(e, 'Developer')}\r\n                  >\r\n                    Developer\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item xs ={6}>\r\n                  <Button\r\n                  className={classes.test_account}\r\n                  color=\"primary\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  onClick={(e) => buttonClick(e, 'Project Manager')}\r\n                  >\r\n                    Project Manager\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <Button\r\n                  className={classes.test_account}\r\n                  color=\"primary\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  onClick={(e) => buttonClick(e, 'Team Member')}\r\n                  >\r\n                    Team Member\r\n                  </Button>\r\n                </Grid>\r\n                <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n                onClick={(e) => formSubmit(e)}\r\n              >\r\n                Sign In\r\n              </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link onClick={() => toRegularLogin()} href=\"#\" variant=\"body2\">\r\n                  Regular Login\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n            </Grid>\r\n          </div>\r\n        <form className={` ${classes.form} login-form-main `} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"username\"\r\n            label=\"Username\"\r\n            name=\"username\"\r\n            autoComplete=\"username\"\r\n            autoFocus\r\n            onChange={(e) => setLogin(e.target.value)}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={(e) => formSubmit(e)}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link onClick={() => toTestAccount()} href=\"#\" variant=\"body2\">\r\n                Test Accounts\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\"\r\n              onClick={(e) => createAccount(e)}>\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default NewLogin;","C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\components\\Tickets\\MyTickets.js",[],"C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\components\\Login\\newRegister.js",[],"C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\components\\Dashboard\\Dashboard.js",["95","96"],"C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\components\\Login\\Login.js",[],"C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\components\\ManageProject\\ManageProjects.js",["97","98","99"],"import { React, useState , useEffect} from 'react';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { editingProject } from '../../actions'\r\nimport Header from '../Header/Header';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\nimport { Button, Container, Box, Grid } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport axios from 'axios';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        position: 'absolute',\r\n        left: '15vw',\r\n        top: '20vh',\r\n        width: '80vw',\r\n        height: '80vh',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignContent: 'center'\r\n    },\r\n\r\n}))\r\n\r\n\r\nconst ManageProjects = ({ projectEditReducer, loginReducer }) => {\r\n    const [projectList, setProjectList] = useState([]);\r\n    const [selectedProject, setSelectedProject] = useState('');\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    \r\n    useEffect(() => {\r\n\r\n        axios.get(\"http://localhost:5000/projectusers\")\r\n        .then((res, err)=> {\r\n            if(err)console.log(err)\r\n                       \r\n        })\r\n\r\n        axios.get(\"http://localhost:5000/projects\")\r\n        .then((res, err) => {\r\n            if(err)console.log(err)\r\n            let tempArr = [];\r\n            console.log(Array.isArray(res.data))\r\n            if(Array.isArray(res.data)){\r\n                let newArr = res.data.map(obj => {\r\n                    return obj.project\r\n                }).map(obj =>{\r\n                    if(tempArr.includes(obj) === false){\r\n                        tempArr = [...tempArr, obj]\r\n                    }\r\n                    return obj\r\n                })\r\n                setProjectList(tempArr);\r\n                setSelectedProject(tempArr[0]);\r\n            }\r\n        \r\n        })\r\n    }, []) \r\n\r\n    const changeProject = (e) => {\r\n        setSelectedProject(e.target.value);\r\n        console.log(selectedProject)\r\n    }\r\n    const rows = projectList.map((obj, index) => {\r\n        return {\r\n\r\n        }\r\n    })\r\n\r\n    return (\r\n       <>\r\n            <Container className={classes.container}>\r\n                <Box sx={{ flexGrow: 1, overflow: 'auto'}}>\r\n                    <Grid container spacing={2}>\r\n                        {projectList.map((obj, index) => {\r\n                            return(\r\n                                <>\r\n                                <Grid item xs={8} >\r\n                                    {obj}\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <Button\r\n                                    color=\"primary\"\r\n                                    variant=\"contained\"\r\n                                    onClick={ () => {\r\n                                        history.push('/edit-project')\r\n                                        dispatch(editingProject(obj))\r\n                                    }                                        \r\n                                    }>Edit</Button>\r\n                                </Grid>\r\n                                </>\r\n                            )\r\n                        })}\r\n                            \r\n                            \r\n                    </Grid>\r\n                </Box>\r\n                <Button\r\n                color='secondary'\r\n                variant='contained' \r\n                 onClick={() => history.push('/create-project')}>Create Project</Button>\r\n                \r\n            </Container>\r\n            <Header/>\r\n            <Sidebar/>\r\n       </>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        projectEditReducer: state.projectEdit,\r\n        loginReducer: state.login\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {editingProject})(ManageProjects);\r\n","C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\components\\ManageProject\\CreateProject.js",["100","101","102","103","104"],"import {React, useState, useEffect} from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Header from '../Header/Header';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\nimport { Button, List, Select, ListItem, MenuItem, Container, InputLabel, TextField } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    nameList: {\r\n        width: '15em',\r\n        height: '13em',\r\n        maxHeight: '13em',\r\n        overflowY: 'auto',\r\n        border: '1px solid black'\r\n    },\r\n    transferContainer: {\r\n        display: 'flex',\r\n        marginBottom: theme.spacing(4),\r\n        alignItems: 'center',\r\n        justifySelf: 'start'\r\n    },\r\n    transferArrows: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n    },\r\n    container: {\r\n        position: 'absolute',\r\n        left: '20vw',\r\n        top: '20vh',\r\n        width: '70vw',\r\n        height: '80vh',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'start'\r\n    },\r\n    createProject : {\r\n        width: '40%',\r\n        alignSelf: 'center',\r\n    },\r\n    arrowButton: {\r\n        width:'60%',\r\n        alignSelf: 'center',\r\n    }\r\n}))\r\n\r\n\r\nconst CreateProject = () => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [projectName, setProjectName] = useState('');\r\n    const [projectLead, setProjectLead] = useState('');\r\n    const [userList, setUserList] = useState([]);\r\n    const [selectedUserList, setSelectedUserList] = useState([]);\r\n    const [selectedUserName, setSelectedUserName] = useState('');\r\n    const [highlightedName, setHighlightedName] = useState('');\r\n    const [projectLeadList, setProjectLeadList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:5000/projectusers\")\r\n        .then(res => {\r\n           setUserList(res.data)\r\n        })\r\n    }, [])\r\n\r\n    const buttonClickRight = () => {\r\n        let newArr;\r\n            newArr = userList.filter(obj => {\r\n                if(obj.user === selectedUserName){\r\n                    setSelectedUserList([{ user: selectedUserName, role: obj.role }, ...selectedUserList])\r\n                }                \r\n                return obj.user !== selectedUserName\r\n            })\r\n            setUserList(newArr);\r\n        \r\n    }\r\n\r\n    const buttonClickLeft = () => {\r\n        let newArr;\r\n        newArr = selectedUserList.filter(obj => {\r\n            if(obj.user === selectedUserName){\r\n                    setUserList([{ user: selectedUserName, role: obj.role }, ...userList])\r\n            }                \r\n            return obj.user !== selectedUserName\r\n        })\r\n        setSelectedUserList(newArr);\r\n    }\r\n\r\n    const buttonClickSelector = (e) => {\r\n        //if(selectedUserName.length > 0) {\r\n       //     document.getElementById(selectedUserName).style.background = 'white';\r\n       // }\r\n        setSelectedUserName(e.target.id);\r\n        //e.target.style.background = 'gray'\r\n        \r\n\r\n    }\r\n\r\n    const createProject = (e) => {\r\n        let users = selectedUserList.map(obj => {\r\n            if(obj.user === projectLead){\r\n                return { \r\n                    user: obj.user,\r\n                    role: obj.role,\r\n                    project: projectName,\r\n                    projectlead: true\r\n                }\r\n            }else{\r\n                return {\r\n                    user: obj.user,\r\n                    role:obj.role,\r\n                    project: projectName,\r\n                    projectlead: false\r\n                }\r\n            }\r\n        })\r\n\r\n        axios.post(\"http://localhost:5000/createproject\", {\r\n        users\r\n        }).then(res =>{\r\n            console.log(res.data)\r\n            history.push('/manage-projects')\r\n        })\r\n\r\n    }\r\n\r\n    const testState = () => [\r\n        console.log(userList, selectedUserList)\r\n    ]\r\n\r\n    return (\r\n        <>\r\n            <Container className={classes.container}>\r\n                \r\n                <Container className={classes.transferContainer}>\r\n                    <InputLabel id='create-project-project-name'>Project Name: </InputLabel>\r\n                    <TextField type=\"text\" value={projectName} onChange={(e) => setProjectName(e.target.value)} />\r\n                </Container>\r\n               <Container className={classes.transferContainer}>\r\n                    <InputLabel id='create-project-project-lead'>Project Lead:  </InputLabel>\r\n                    <Select \r\n                    labelId= 'create-project-project-lead'\r\n                    autoWidth \r\n                    value={projectLead} \r\n                    onChange={(e) => setProjectLead(e.target.value) }>\r\n                        {selectedUserList.map((obj, index) => {\r\n                            return(\r\n                            <MenuItem value={obj.user} key={index + 100} >\r\n                                {obj.user}\r\n                            </MenuItem>\r\n                            )\r\n                        })}\r\n                    </Select>\r\n\r\n               </Container> \r\n                <Container className={classes.transferContainer}>\r\n                    <Container className={classes.transferArrows}>\r\n                        <InputLabel>All Users</InputLabel>\r\n                        <List className={classes.nameList}>\r\n                            <RenderNamesList arr={userList} func={(event) => buttonClickSelector(event)} num={0} />\r\n                        </List>\r\n                    </Container>\r\n                    <Container className={classes.transferArrows}>\r\n                        <Button\r\n                        className={classes.arrowButton}\r\n                        color='secondary'\r\n                        variant='contained'\r\n                        size = 'small'\r\n                        onClick={() => buttonClickRight()}>\r\n                            {'>>>'}\r\n                        </Button>\r\n                        <Button\r\n                        className={classes.arrowButton}\r\n                        color='secondary'\r\n                        variant='contained'\r\n                        size= 'small'\r\n                        onClick={() => buttonClickLeft()}\r\n                        >\r\n                            {'<<<'}\r\n                        </Button>\r\n                    </Container>\r\n                    <Container className={classes.transferArrows}>\r\n                        <InputLabel>Project Members</InputLabel>\r\n                        <List className={classes.nameList}>              \r\n                            <RenderNamesList arr={selectedUserList} func={(event) => buttonClickSelector(event)} num={userList.length - 1} />\r\n                        </List>\r\n                    </Container>\r\n                </Container>\r\n                \r\n                <Button \r\n                className={classes.createProject}\r\n                color='primary' \r\n                variant='contained'\r\n                onClick={() => createProject()}>Create Project</Button>\r\n            </Container>\r\n            <Header />\r\n            <Sidebar />\r\n        </>\r\n    )\r\n}\r\n\r\nconst RenderNamesList = ({arr = [], func, num}) => {\r\n\r\n    return(\r\n        <>\r\n            {arr.map((obj, index) =>{\r\n                return(\r\n                    <ListItem id={obj.user} button key={index + num} value={obj.user} onClick={func}>\r\n                        {obj.user}\r\n                    </ListItem  >\r\n                )\r\n            })}\r\n        </>\r\n    )  \r\n}\r\n\r\n\r\nexport default CreateProject;","C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\components\\ManageProject\\EditProjects.js",["105","106","107"],"C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\actions\\index.js",[],"C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\components\\Login\\Register.js",[],"C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\components\\Tickets\\Ticket.js",["108"],"C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\components\\Sidebar\\Sidebar.js",[],"C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\components\\Header\\Header.js",["109"],"C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\components\\Tickets\\TicketGrid.js",["110"],"C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\components\\ManageProject\\MyProjects.js",["111"],"C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\components\\Tickets\\ProjectTickets.js",["112","113","114"],{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":6,"column":8,"nodeType":"121","messageId":"122","endLine":6,"endColumn":13},{"ruleId":"119","severity":1,"message":"123","line":2,"column":10,"nodeType":"121","messageId":"122","endLine":2,"endColumn":17},{"ruleId":"119","severity":1,"message":"124","line":5,"column":8,"nodeType":"121","messageId":"122","endLine":5,"endColumn":16},{"ruleId":"119","severity":1,"message":"125","line":35,"column":23,"nodeType":"121","messageId":"122","endLine":35,"endColumn":35},{"ruleId":"126","severity":1,"message":"127","line":59,"column":8,"nodeType":"128","endLine":59,"endColumn":22,"suggestions":"129"},{"ruleId":"119","severity":1,"message":"130","line":47,"column":21,"nodeType":"121","messageId":"122","endLine":47,"endColumn":27},{"ruleId":"119","severity":1,"message":"131","line":62,"column":11,"nodeType":"121","messageId":"122","endLine":62,"endColumn":24},{"ruleId":"119","severity":1,"message":"132","line":66,"column":11,"nodeType":"121","messageId":"122","endLine":66,"endColumn":15},{"ruleId":"119","severity":1,"message":"133","line":58,"column":12,"nodeType":"121","messageId":"122","endLine":58,"endColumn":27},{"ruleId":"119","severity":1,"message":"134","line":58,"column":29,"nodeType":"121","messageId":"122","endLine":58,"endColumn":47},{"ruleId":"119","severity":1,"message":"135","line":59,"column":12,"nodeType":"121","messageId":"122","endLine":59,"endColumn":27},{"ruleId":"119","severity":1,"message":"136","line":59,"column":29,"nodeType":"121","messageId":"122","endLine":59,"endColumn":47},{"ruleId":"119","severity":1,"message":"137","line":129,"column":11,"nodeType":"121","messageId":"122","endLine":129,"endColumn":20},{"ruleId":"119","severity":1,"message":"138","line":7,"column":42,"nodeType":"121","messageId":"122","endLine":7,"endColumn":54},{"ruleId":"119","severity":1,"message":"139","line":61,"column":13,"nodeType":"121","messageId":"122","endLine":61,"endColumn":21},{"ruleId":"126","severity":1,"message":"140","line":88,"column":8,"nodeType":"128","endLine":88,"endColumn":10,"suggestions":"141"},{"ruleId":"119","severity":1,"message":"142","line":3,"column":8,"nodeType":"121","messageId":"122","endLine":3,"endColumn":13},{"ruleId":"119","severity":1,"message":"138","line":4,"column":37,"nodeType":"121","messageId":"122","endLine":4,"endColumn":49},{"ruleId":"119","severity":1,"message":"143","line":41,"column":28,"nodeType":"121","messageId":"122","endLine":41,"endColumn":44},{"ruleId":"144","severity":1,"message":"145","line":46,"column":21,"nodeType":"146","messageId":"147","endLine":46,"endColumn":28},{"ruleId":"119","severity":1,"message":"148","line":5,"column":10,"nodeType":"121","messageId":"122","endLine":5,"endColumn":16},{"ruleId":"149","severity":1,"message":"150","line":21,"column":9,"nodeType":"151","messageId":"152","endLine":21,"endColumn":21},{"ruleId":"126","severity":1,"message":"153","line":47,"column":8,"nodeType":"128","endLine":47,"endColumn":10,"suggestions":"154"},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","'connect' is defined but never used.","'Register' is defined but never used.","'setsortModel' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["157"],"'newArr' is assigned a value but never used.","'changeProject' is assigned a value but never used.","'rows' is assigned a value but never used.","'highlightedName' is assigned a value but never used.","'setHighlightedName' is assigned a value but never used.","'projectLeadList' is assigned a value but never used.","'setProjectLeadList' is assigned a value but never used.","'testState' is assigned a value but never used.","'ListItemText' is defined but never used.","'original' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'projectEditReducer.project'. Either include it or remove the dependency array.",["158"],"'axios' is defined but never used.","'setTempSortModel' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'Button' is defined but never used.","no-dupe-keys","Duplicate key 'alignContent'.","ObjectExpression","unexpected","React Hook useEffect has a missing dependency: 'projectTickets.projectName'. Either include it or remove the dependency array.",["159"],"no-global-assign","no-unsafe-negation",{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},"Update the dependencies array to be: [history, loginReducer]",{"range":"166","text":"167"},"Update the dependencies array to be: [projectEditReducer.project]",{"range":"168","text":"169"},"Update the dependencies array to be: [projectTickets.projectName]",{"range":"170","text":"171"},[1581,1595],"[history, loginReducer]",[2727,2729],"[projectEditReducer.project]",[1327,1329],"[projectTickets.projectName]"]