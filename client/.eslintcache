[{"C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\index.js":"1","C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\components\\App.js":"2","C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\reducers\\index.js":"3","C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\components\\Tickets\\CreateTicket.js":"4","C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\components\\Tickets\\EditTicket.js":"5","C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\components\\Login\\newLogin.js":"6","C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\components\\Tickets\\MyTickets.js":"7","C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\components\\Login\\newRegister.js":"8","C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\components\\Dashboard\\Dashboard.js":"9","C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\components\\Login\\Login.js":"10","C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\components\\ManageProject\\ManageProjects.js":"11","C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\components\\ManageProject\\CreateProject.js":"12","C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\components\\ManageProject\\EditProjects.js":"13","C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\actions\\index.js":"14","C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\components\\Login\\Register.js":"15","C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\components\\Tickets\\Ticket.js":"16","C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\components\\Header\\newHeader.js":"17","C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\components\\Sidebar\\Sidebar.js":"18","C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\components\\Header\\Header.js":"19","C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\components\\Tickets\\TicketGrid.js":"20"},{"size":474,"mtime":1639256761210,"results":"21","hashOfConfig":"22"},{"size":1957,"mtime":1639256761185,"results":"23","hashOfConfig":"22"},{"size":827,"mtime":1639502443096,"results":"24","hashOfConfig":"22"},{"size":7933,"mtime":1639256761203,"results":"25","hashOfConfig":"22"},{"size":7160,"mtime":1639256761205,"results":"26","hashOfConfig":"22"},{"size":7514,"mtime":1639507881663,"results":"27","hashOfConfig":"22"},{"size":6240,"mtime":1639524461871,"results":"28","hashOfConfig":"22"},{"size":4431,"mtime":1639256761195,"results":"29","hashOfConfig":"22"},{"size":3786,"mtime":1639528807240,"results":"30","hashOfConfig":"22"},{"size":3302,"mtime":1639256761191,"results":"31","hashOfConfig":"22"},{"size":3916,"mtime":1639256761198,"results":"32","hashOfConfig":"22"},{"size":7631,"mtime":1639256761196,"results":"33","hashOfConfig":"22"},{"size":8364,"mtime":1639256761197,"results":"34","hashOfConfig":"22"},{"size":389,"mtime":1639256761184,"results":"35","hashOfConfig":"22"},{"size":1672,"mtime":1639256761192,"results":"36","hashOfConfig":"22"},{"size":2783,"mtime":1639256761209,"results":"37","hashOfConfig":"22"},{"size":1396,"mtime":1639256761190,"results":"38","hashOfConfig":"22"},{"size":2400,"mtime":1639256761200,"results":"39","hashOfConfig":"22"},{"size":501,"mtime":1639256761188,"results":"40","hashOfConfig":"22"},{"size":4373,"mtime":1639525421627,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"13i463r",{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\index.js",[],["89","90"],"C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\components\\App.js",["91"],"import { React, useEffect} from 'react';\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport { useDispatch, connect } from 'react-redux';\r\nimport CreateTicket from './Tickets/CreateTicket';\r\nimport EditTicket from './Tickets/EditTicket';\r\nimport Login from './Login/Login'\r\nimport Dashboard from './Dashboard/Dashboard';\r\nimport axios from 'axios';\r\nimport ManageProjects from './ManageProject/ManageProjects';\r\nimport { finalLogin } from '../actions';\r\nimport CreateProject from './ManageProject/CreateProject';\r\nimport EditProject from './ManageProject/EditProjects';\r\nimport MyTickets from './Tickets/MyTickets';\r\nimport newLogin from './Login/newLogin';\r\nimport newRegister from './Login/newRegister';\r\n\r\naxios.defaults.withCredentials = true;\r\n\r\nconst App = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:5000/login\")\r\n        .then(res => {\r\n            if(res.data.loggedIn) dispatch(finalLogin(res.data.user))\r\n            })        \r\n    }, [dispatch])\r\n\r\n    return (\r\n        <Router>\r\n            <Route path=\"/\" exact component={newLogin} />\r\n            <Route path='/dashboard' exact component={Dashboard} />\r\n            <Route path='/create-ticket' exact component={CreateTicket} />\r\n            <Route path='/edit-ticket' exact component={EditTicket} />\r\n            <Route path='/manage-projects' component={ManageProjects} />\r\n            <Route path='/create-project' component={CreateProject} />\r\n            <Route path='/edit-project' component={EditProject} />\r\n            <Route path='/my-tickets' component={MyTickets} />\r\n            <Route path='/test-route' component={newLogin} />\r\n            <Route path='/create-account' component={newRegister} />\r\n        </Router>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loginReducer: state.login\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, finalLogin)(App);","C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\reducers\\index.js",[],"C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\components\\Tickets\\CreateTicket.js",[],"C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\components\\Tickets\\EditTicket.js",[],"C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\components\\Login\\newLogin.js",["92","93"],"C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\components\\Tickets\\MyTickets.js",[],"C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\components\\Login\\newRegister.js",[],"C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\components\\Dashboard\\Dashboard.js",[],"C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\components\\Login\\Login.js",[],"C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\components\\ManageProject\\ManageProjects.js",["94","95","96"],"import { React, useState , useEffect} from 'react';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { editingProject } from '../../actions'\r\nimport Header from '../Header/Header';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\nimport { Button, Container, Box, Grid } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport axios from 'axios';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        position: 'absolute',\r\n        left: '15vw',\r\n        top: '20vh',\r\n        width: '80vw',\r\n        height: '80vh',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignContent: 'center'\r\n    },\r\n\r\n}))\r\n\r\n\r\nconst ManageProjects = ({ projectEditReducer, loginReducer }) => {\r\n    const [projectList, setProjectList] = useState([]);\r\n    const [selectedProject, setSelectedProject] = useState('');\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    \r\n    useEffect(() => {\r\n\r\n        axios.get(\"http://localhost:5000/projectusers\")\r\n        .then((res, err)=> {\r\n            if(err)console.log(err)\r\n                       \r\n        })\r\n\r\n        axios.get(\"http://localhost:5000/projects\")\r\n        .then((res, err) => {\r\n            if(err)console.log(err)\r\n            let tempArr = [];\r\n            console.log(Array.isArray(res.data))\r\n            if(Array.isArray(res.data)){\r\n                let newArr = res.data.map(obj => {\r\n                    return obj.project\r\n                }).map(obj =>{\r\n                    if(tempArr.includes(obj) === false){\r\n                        tempArr = [...tempArr, obj]\r\n                    }\r\n                    return obj\r\n                })\r\n                setProjectList(tempArr);\r\n                setSelectedProject(tempArr[0]);\r\n            }\r\n        \r\n        })\r\n    }, []) \r\n\r\n    const changeProject = (e) => {\r\n        setSelectedProject(e.target.value);\r\n        console.log(selectedProject)\r\n    }\r\n    const rows = projectList.map((obj, index) => {\r\n        return {\r\n\r\n        }\r\n    })\r\n\r\n    return (\r\n       <>\r\n            <Container className={classes.container}>\r\n                <Box sx={{ flexGrow: 1, overflow: 'auto'}}>\r\n                    <Grid container spacing={2}>\r\n                        {projectList.map((obj, index) => {\r\n                            return(\r\n                                <>\r\n                                <Grid item xs={8} >\r\n                                    {obj}\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <Button\r\n                                    color=\"primary\"\r\n                                    variant=\"contained\"\r\n                                    onClick={ () => {\r\n                                        history.push('/edit-project')\r\n                                        dispatch(editingProject(obj))\r\n                                    }                                        \r\n                                    }>Edit</Button>\r\n                                </Grid>\r\n                                </>\r\n                            )\r\n                        })}\r\n                            \r\n                            \r\n                    </Grid>\r\n                </Box>\r\n                <Button\r\n                color='secondary'\r\n                variant='contained' \r\n                 onClick={() => history.push('/create-project')}>Create Project</Button>\r\n                \r\n            </Container>\r\n            <Header/>\r\n            <Sidebar/>\r\n       </>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        projectEditReducer: state.projectEdit,\r\n        loginReducer: state.login\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {editingProject})(ManageProjects);\r\n","C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\components\\ManageProject\\CreateProject.js",["97","98","99","100","101"],"import {React, useState, useEffect} from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Header from '../Header/Header';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\nimport { Button, List, Select, ListItem, MenuItem, Container, InputLabel, TextField } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    nameList: {\r\n        width: '15em',\r\n        height: '13em',\r\n        maxHeight: '13em',\r\n        overflowY: 'auto',\r\n        border: '1px solid black'\r\n    },\r\n    transferContainer: {\r\n        display: 'flex',\r\n        marginBottom: theme.spacing(4),\r\n        alignItems: 'center',\r\n        justifySelf: 'start'\r\n    },\r\n    transferArrows: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n    },\r\n    container: {\r\n        position: 'absolute',\r\n        left: '20vw',\r\n        top: '20vh',\r\n        width: '70vw',\r\n        height: '80vh',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'start'\r\n    },\r\n    createProject : {\r\n        width: '40%',\r\n        alignSelf: 'center',\r\n    },\r\n    arrowButton: {\r\n        width:'60%',\r\n        alignSelf: 'center',\r\n    }\r\n}))\r\n\r\n\r\nconst CreateProject = () => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [projectName, setProjectName] = useState('');\r\n    const [projectLead, setProjectLead] = useState('');\r\n    const [userList, setUserList] = useState([]);\r\n    const [selectedUserList, setSelectedUserList] = useState([]);\r\n    const [selectedUserName, setSelectedUserName] = useState('');\r\n    const [highlightedName, setHighlightedName] = useState('');\r\n    const [projectLeadList, setProjectLeadList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:5000/projectusers\")\r\n        .then(res => {\r\n           setUserList(res.data)\r\n        })\r\n    }, [])\r\n\r\n    const buttonClickRight = () => {\r\n        let newArr;\r\n            newArr = userList.filter(obj => {\r\n                if(obj.user === selectedUserName){\r\n                    setSelectedUserList([{ user: selectedUserName, role: obj.role }, ...selectedUserList])\r\n                }                \r\n                return obj.user !== selectedUserName\r\n            })\r\n            setUserList(newArr);\r\n        \r\n    }\r\n\r\n    const buttonClickLeft = () => {\r\n        let newArr;\r\n        newArr = selectedUserList.filter(obj => {\r\n            if(obj.user === selectedUserName){\r\n                    setUserList([{ user: selectedUserName, role: obj.role }, ...userList])\r\n            }                \r\n            return obj.user !== selectedUserName\r\n        })\r\n        setSelectedUserList(newArr);\r\n    }\r\n\r\n    const buttonClickSelector = (e) => {\r\n        //if(selectedUserName.length > 0) {\r\n       //     document.getElementById(selectedUserName).style.background = 'white';\r\n       // }\r\n        setSelectedUserName(e.target.id);\r\n        //e.target.style.background = 'gray'\r\n        \r\n\r\n    }\r\n\r\n    const createProject = (e) => {\r\n        let users = selectedUserList.map(obj => {\r\n            if(obj.user === projectLead){\r\n                return { \r\n                    user: obj.user,\r\n                    role: obj.role,\r\n                    project: projectName,\r\n                    projectlead: true\r\n                }\r\n            }else{\r\n                return {\r\n                    user: obj.user,\r\n                    role:obj.role,\r\n                    project: projectName,\r\n                    projectlead: false\r\n                }\r\n            }\r\n        })\r\n\r\n        axios.post(\"http://localhost:5000/createproject\", {\r\n        users\r\n        }).then(res =>{\r\n            console.log(res.data)\r\n            history.push('/manage-projects')\r\n        })\r\n\r\n    }\r\n\r\n    const testState = () => [\r\n        console.log(userList, selectedUserList)\r\n    ]\r\n\r\n    return (\r\n        <>\r\n            <Container className={classes.container}>\r\n                \r\n                <Container className={classes.transferContainer}>\r\n                    <InputLabel id='create-project-project-name'>Project Name: </InputLabel>\r\n                    <TextField type=\"text\" value={projectName} onChange={(e) => setProjectName(e.target.value)} />\r\n                </Container>\r\n               <Container className={classes.transferContainer}>\r\n                    <InputLabel id='create-project-project-lead'>Project Lead:  </InputLabel>\r\n                    <Select \r\n                    labelId= 'create-project-project-lead'\r\n                    autoWidth \r\n                    value={projectLead} \r\n                    onChange={(e) => setProjectLead(e.target.value) }>\r\n                        {selectedUserList.map((obj, index) => {\r\n                            return(\r\n                            <MenuItem value={obj.user} key={index + 100} >\r\n                                {obj.user}\r\n                            </MenuItem>\r\n                            )\r\n                        })}\r\n                    </Select>\r\n\r\n               </Container> \r\n                <Container className={classes.transferContainer}>\r\n                    <Container className={classes.transferArrows}>\r\n                        <InputLabel>All Users</InputLabel>\r\n                        <List className={classes.nameList}>\r\n                            <RenderNamesList arr={userList} func={(event) => buttonClickSelector(event)} num={0} />\r\n                        </List>\r\n                    </Container>\r\n                    <Container className={classes.transferArrows}>\r\n                        <Button\r\n                        className={classes.arrowButton}\r\n                        color='secondary'\r\n                        variant='contained'\r\n                        size = 'small'\r\n                        onClick={() => buttonClickRight()}>\r\n                            {'>>>'}\r\n                        </Button>\r\n                        <Button\r\n                        className={classes.arrowButton}\r\n                        color='secondary'\r\n                        variant='contained'\r\n                        size= 'small'\r\n                        onClick={() => buttonClickLeft()}\r\n                        >\r\n                            {'<<<'}\r\n                        </Button>\r\n                    </Container>\r\n                    <Container className={classes.transferArrows}>\r\n                        <InputLabel>Project Members</InputLabel>\r\n                        <List className={classes.nameList}>              \r\n                            <RenderNamesList arr={selectedUserList} func={(event) => buttonClickSelector(event)} num={userList.length - 1} />\r\n                        </List>\r\n                    </Container>\r\n                </Container>\r\n                \r\n                <Button \r\n                className={classes.createProject}\r\n                color='primary' \r\n                variant='contained'\r\n                onClick={() => createProject()}>Create Project</Button>\r\n            </Container>\r\n            <Header />\r\n            <Sidebar />\r\n        </>\r\n    )\r\n}\r\n\r\nconst RenderNamesList = ({arr = [], func, num}) => {\r\n\r\n    return(\r\n        <>\r\n            {arr.map((obj, index) =>{\r\n                return(\r\n                    <ListItem id={obj.user} button key={index + num} value={obj.user} onClick={func}>\r\n                        {obj.user}\r\n                    </ListItem  >\r\n                )\r\n            })}\r\n        </>\r\n    )  \r\n}\r\n\r\n\r\nexport default CreateProject;","C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\components\\ManageProject\\EditProjects.js",["102","103","104","105"],"import {React, useState, useEffect} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Header from '../Header/Header';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\nimport { Button, List, Select, ListItem, ListItemText, MenuItem, Container, InputLabel, TextField } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    nameList: {\r\n        width: '15em',\r\n        height: '13em',\r\n        maxHeight: '13em',\r\n        overflowY: 'auto',\r\n        border: '1px solid black'\r\n    },\r\n    transferContainer: {\r\n        display: 'flex',\r\n        marginBottom: theme.spacing(4),\r\n        alignItems: 'center',\r\n        justifySelf: 'start'\r\n    },\r\n    transferArrows: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n    },\r\n    container: {\r\n        position: 'absolute',\r\n        left: '20vw',\r\n        top: '20vh',\r\n        width: '70vw',\r\n        height: '80vh',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'start'\r\n    },\r\n    createProject : {\r\n        width: '40%',\r\n        alignSelf: 'center',\r\n    },\r\n    arrowButton: {\r\n        width:'60%',\r\n        alignSelf: 'center',\r\n    }\r\n}))\r\n\r\n\r\nconst EditProject = ({projectEditReducer}) => {\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    const [projectName, setProjectName] = useState(projectEditReducer.project);\r\n    const [projectLead, setProjectLead] = useState('');\r\n    const [userList, setUserList] = useState([]);\r\n    const [selectedUserList, setSelectedUserList] = useState([]);\r\n    const [selectedUserName, setSelectedUserName] = useState('');\r\n     \r\n    useEffect(() => {\r\n        let newArr;\r\n        let original;\r\n        axios.get(\"http://localhost:5000/projects\")\r\n        .then(res => {\r\n            original = res.data\r\n            newArr = res.data.filter(obj => {\r\n                return obj.project === projectEditReducer.project \r\n            }).map(obj => {\r\n                return obj.name\r\n            })\r\n            \r\n        })\r\n\r\n        axios.get(\"http://localhost:5000/projectusers\")\r\n        .then(res => {\r\n           setUserList(res.data.filter(obj => {\r\n               \r\n               return newArr.includes(obj.user) === false\r\n           }))\r\n           setSelectedUserList(res.data.filter(obj => {\r\n               \r\n            return newArr.includes(obj.user)\r\n        }))\r\n        })\r\n    }, [])\r\n\r\n    const buttonClickRight = () => {\r\n        let newArr;\r\n            newArr = userList.filter(obj => {\r\n                if(obj.user === selectedUserName){\r\n                    setSelectedUserList([{ user: selectedUserName, role: obj.role }, ...selectedUserList])\r\n                }                \r\n                return obj.user !== selectedUserName\r\n            })\r\n            setUserList(newArr);\r\n            console.log(selectedUserList)\r\n        \r\n    }\r\n\r\n    const buttonClickLeft = () => {\r\n        let newArr;\r\n        newArr = selectedUserList.filter(obj => {\r\n            if(obj.user === selectedUserName){\r\n                    setUserList([{ user: selectedUserName, role: obj.role }, ...userList])\r\n            }                \r\n            return obj.user !== selectedUserName\r\n        })\r\n        setSelectedUserList(newArr);\r\n    }\r\n\r\n    const buttonClickSelector = (e) => {\r\n        setSelectedUserName(e.target.id);\r\n    }\r\n\r\n    const projectLeadSelector = (e) => {\r\n        setProjectLead(e.target.value)\r\n    }\r\n\r\n    const createProject = (e) => {\r\n        console.log(projectLead)\r\n        let users = selectedUserList.map(obj => {\r\n            if(obj.user === projectLead){\r\n                return { \r\n                    user: obj.user,\r\n                    role: obj.role,\r\n                    project: projectName,\r\n                    projectlead: true\r\n                }\r\n            }else{\r\n                return {\r\n                    user: obj.user,\r\n                    role:obj.role,\r\n                    project: projectName,\r\n                    projectlead: false\r\n                }\r\n            }\r\n        })\r\n\r\n        axios.post(\"http://localhost:5000/deleteproject\", {\r\n            projectName\r\n        }).then(res => {\r\n            console.log(res.data)\r\n        })\r\n\r\n        axios.post(\"http://localhost:5000/createproject\", {\r\n        users\r\n        }).then(res => {\r\n            console.log(res.data)\r\n            \r\n        })\r\n        history.push('/manage-projects')\r\n    }\r\n\r\n    const deleteProject = (e) => {\r\n        axios.post(\"http://localhost:5000/deleteproject\", {\r\n        projectName\r\n        }).then(res =>{\r\n            console.log(res.data);\r\n        })\r\n        history.push('/manage-projects')\r\n    }\r\n\r\n    return (\r\n        <>   <Container className={classes.container}>\r\n                \r\n        <Container className={classes.transferContainer}>\r\n            <InputLabel id='create-project-project-name'>Project Name: </InputLabel>\r\n            <TextField type=\"text\" value={projectName} onChange={(e) => setProjectName(e.target.value)} />\r\n        </Container>\r\n       <Container className={classes.transferContainer}>\r\n            <InputLabel id='create-project-project-lead'>Project Lead:  </InputLabel>\r\n            <Select \r\n            labelId= 'create-project-project-lead'\r\n            autoWidth \r\n            value={projectLead} \r\n            onChange={(e) => setProjectLead(e.target.value) }>\r\n                {selectedUserList.map((obj, index) => {\r\n                    return(\r\n                    <MenuItem value={obj.user} key={index + 100} >\r\n                        {obj.user}\r\n                    </MenuItem>\r\n                    )\r\n                })}\r\n            </Select>\r\n\r\n       </Container> \r\n        <Container className={classes.transferContainer}>\r\n            <Container className={classes.transferArrows}>\r\n                <InputLabel>All Users</InputLabel>\r\n                <List className={classes.nameList}>\r\n                    <RenderNamesList arr={userList} func={(event) => buttonClickSelector(event)} num={0} />\r\n                </List>\r\n            </Container>\r\n            <Container className={classes.transferArrows}>\r\n                <Button\r\n                className={classes.arrowButton}\r\n                color='secondary'\r\n                variant='contained'\r\n                size = 'small'\r\n                onClick={() => buttonClickRight()}>\r\n                    {'>>>'}\r\n                </Button>\r\n                <Button\r\n                className={classes.arrowButton}\r\n                color='secondary'\r\n                variant='contained'\r\n                size= 'small'\r\n                onClick={() => buttonClickLeft()}\r\n                >\r\n                    {'<<<'}\r\n                </Button>\r\n            </Container>\r\n            <Container className={classes.transferArrows}>\r\n                <InputLabel>Project Members</InputLabel>\r\n                <List className={classes.nameList}>              \r\n                    <RenderNamesList arr={selectedUserList} func={(event) => buttonClickSelector(event)} num={userList.length - 1} />\r\n                </List>\r\n            </Container>\r\n            </Container>\r\n            <Button\r\n            className={classes.createProject}\r\n            color='primary'\r\n            variant='contained'\r\n            onClick={() => createProject()}>Save Project</Button>\r\n            <Button\r\n            className={classes.createProject}\r\n            color='secondary'\r\n            variant='contained'\r\n            onClick={() => deleteProject()}>Delete Project</Button>\r\n        </Container>\r\n            <Header />\r\n            <Sidebar />\r\n        </>\r\n    )\r\n}\r\n\r\nconst RenderNamesList = ({arr = [], func, num}) => {\r\n\r\n    return(\r\n        <>\r\n            {arr.map((obj, index) =>{\r\n                return(\r\n                    <ListItem id={obj.user} button key={index + num} value={obj.user} onClick={func}>\r\n                        {obj.user}\r\n                    </ListItem  >\r\n                )\r\n            })}\r\n        </>\r\n    )  \r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        projectEditReducer: state.projectEdit\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(EditProject);","C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\actions\\index.js",[],"C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\components\\Login\\Register.js",[],"C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\components\\Tickets\\Ticket.js",["106"],"import React from 'react';\r\nimport { useDispatch, connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { editTicket } from '../../actions';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Button, Container, List, ListItem } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    pageOverlay:{\r\n        position: 'fixed',\r\n        top: '0',\r\n        left: '0',\r\n        width: '100vw%',\r\n        height: '100vh',\r\n        zIndex: 8,\r\n        background: 'rgb(117, 117, 117, .6)',\r\n        display: 'none',\r\n        maxWidth: '100%'\r\n    },\r\n    ticketContainer: {\r\n        position: 'fixed',\r\n        top: '10vh',\r\n        left: '30vw',\r\n        width: '40vw',\r\n        height: '60vh',\r\n        fontSize: '1.2em',   \r\n        background: 'white',\r\n        zIndex: 100,\r\n        \r\n    }\r\n    \r\n}));\r\n\r\nconst Ticket = ({ ticket }) => {\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const pageOverlayOffClick = (e) => {\r\n        e.preventDefault();\r\n        if(e.target === e.currentTarget) {\r\n            e.target.style.display = 'none'\r\n        }\r\n    }\r\n    \r\n    const updateTicket = (event) => {\r\n        event.preventDefault();\r\n        dispatch(editTicket(ticket));\r\n        history.push('/edit-ticket');\r\n    }\r\n\r\n    const newDeleteTicket = (e) => {\r\n        e.preventDefault();\r\n        document.getElementsByClassName('ticket-delete-box')[0].style.display = 'block';\r\n    }\r\n    \r\n\r\n    return (\r\n        <Container className={`page-overlay ${classes.pageOverlay}`} onClick={(e) => pageOverlayOffClick(e)}>\r\n            <Container className={classes.ticketContainer}>\r\n                <List>\r\n                    <ListItem><b>Title:</b> &nbsp; {ticket.title}</ListItem>\r\n                    <ListItem><b>Project:</b> &nbsp; {ticket.project}</ListItem>\r\n                    <ListItem><b>Priority:</b> &nbsp; {ticket.priority}</ListItem>\r\n                    <ListItem><b>Status:</b> &nbsp; {ticket.status}</ListItem>\r\n                    <ListItem><b>Description:</b> &nbsp; {ticket.description}</ListItem>\r\n                </List>\r\n                <Button\r\n                color = 'primary'\r\n                variant= 'contained'\r\n                onClick={(e) => updateTicket(e)}>Update Ticket</Button>\r\n                <Button \r\n                color = 'secondary'\r\n                variant = 'contained'\r\n                onClick={(e) => newDeleteTicket(e)}>Delete Ticket</Button>\r\n            </Container>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        ticketEdit: state.ticketEdit\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { editTicket })(Ticket);","C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\components\\Header\\newHeader.js",["107"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './header.css';\r\nimport { Container, List, ListItem, ListItemText, Typography } from '@material-ui/core';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    header: {\r\n        position: 'absolute',\r\n        top: '0',\r\n        left: '15vw',\r\n        width: '85vw',\r\n        height: '8vh',\r\n        display: 'flex',\r\n        alignItems: 'flex-end',\r\n        borderBottom: 'solid 1px black' ,\r\n    },\r\n    profile: {\r\n        display: 'flex',\r\n        alignItems: 'flex-end',\r\n        justifyItems: 'center'\r\n    }\r\n\r\n}));\r\n\r\nconst NewHeader  = ({finalLogin}) => {\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <Container className={classes.header}>\r\n            <Typography component='h1'>Logged in as: {finalLogin.loginStatus}</Typography>\r\n            <List className={classes.profile}>\r\n                <ListItem><NotificationsIcon/></ListItem>\r\n                <ListItem><AccountCircleIcon/></ListItem>\r\n            </List>\r\n        </Container>      \r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        finalLogin: state.login\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(NewHeader);","C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\components\\Sidebar\\Sidebar.js",[],"C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\components\\Header\\Header.js",[],"C:\\Users\\James Woodard\\Desktop\\My Projects\\bug_tracker\\src\\Tracking-Bugs\\client\\src\\components\\Tickets\\TicketGrid.js",[],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":6,"column":8,"nodeType":"114","messageId":"115","endLine":6,"endColumn":13},{"ruleId":"112","severity":1,"message":"116","line":2,"column":10,"nodeType":"114","messageId":"115","endLine":2,"endColumn":17},{"ruleId":"112","severity":1,"message":"117","line":5,"column":8,"nodeType":"114","messageId":"115","endLine":5,"endColumn":16},{"ruleId":"112","severity":1,"message":"118","line":47,"column":21,"nodeType":"114","messageId":"115","endLine":47,"endColumn":27},{"ruleId":"112","severity":1,"message":"119","line":62,"column":11,"nodeType":"114","messageId":"115","endLine":62,"endColumn":24},{"ruleId":"112","severity":1,"message":"120","line":66,"column":11,"nodeType":"114","messageId":"115","endLine":66,"endColumn":15},{"ruleId":"112","severity":1,"message":"121","line":58,"column":12,"nodeType":"114","messageId":"115","endLine":58,"endColumn":27},{"ruleId":"112","severity":1,"message":"122","line":58,"column":29,"nodeType":"114","messageId":"115","endLine":58,"endColumn":47},{"ruleId":"112","severity":1,"message":"123","line":59,"column":12,"nodeType":"114","messageId":"115","endLine":59,"endColumn":27},{"ruleId":"112","severity":1,"message":"124","line":59,"column":29,"nodeType":"114","messageId":"115","endLine":59,"endColumn":47},{"ruleId":"112","severity":1,"message":"125","line":129,"column":11,"nodeType":"114","messageId":"115","endLine":129,"endColumn":20},{"ruleId":"112","severity":1,"message":"126","line":7,"column":42,"nodeType":"114","messageId":"115","endLine":7,"endColumn":54},{"ruleId":"112","severity":1,"message":"127","line":61,"column":13,"nodeType":"114","messageId":"115","endLine":61,"endColumn":21},{"ruleId":"128","severity":1,"message":"129","line":84,"column":8,"nodeType":"130","endLine":84,"endColumn":10,"suggestions":"131"},{"ruleId":"112","severity":1,"message":"132","line":114,"column":11,"nodeType":"114","messageId":"115","endLine":114,"endColumn":30},{"ruleId":"112","severity":1,"message":"133","line":3,"column":8,"nodeType":"114","messageId":"115","endLine":3,"endColumn":13},{"ruleId":"112","severity":1,"message":"126","line":4,"column":37,"nodeType":"114","messageId":"115","endLine":4,"endColumn":49},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","'connect' is defined but never used.","'Register' is defined but never used.","'newArr' is assigned a value but never used.","'changeProject' is assigned a value but never used.","'rows' is assigned a value but never used.","'highlightedName' is assigned a value but never used.","'setHighlightedName' is assigned a value but never used.","'projectLeadList' is assigned a value but never used.","'setProjectLeadList' is assigned a value but never used.","'testState' is assigned a value but never used.","'ListItemText' is defined but never used.","'original' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'projectEditReducer.project'. Either include it or remove the dependency array.","ArrayExpression",["136"],"'projectLeadSelector' is assigned a value but never used.","'axios' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"137","fix":"138"},"Update the dependencies array to be: [projectEditReducer.project]",{"range":"139","text":"140"},[2566,2568],"[projectEditReducer.project]"]